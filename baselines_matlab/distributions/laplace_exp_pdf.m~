function [p, p1,p0, pnoisy] = two_mixtures(comp_distr,locations, scales, weights1, weights2)
% LAPLACE_EXP generates a 2-component mixture of Laplace distributions.
% All parameters are optional
     if nargin < 1
        locations = [0.0, 5.0]';
    end
    [ncomps,dim]=size(locations);
    if nargin < 2
        weights1 = repmat(1/ncomps,ncomps,1);
    end
    if nargin < 3
        for i=1:ncomps
            scales(i,:,:) = eye(dim);
        end
    end
    if nargin < 4
        weights2 = [1;zeros(ncomps-1,1)]';
    end
    
    p1=makedistWrapper(,'mu', squeeze(loacations(1,:)),'sigma',squeeze(scales(1,:,:)));
    p0=makedistWrapper('laplace','mu', squeeze(loacations(2,:)),'sigma',squeeze(scales(2,:,:)));
    
    
    p = mixture(weights1,{p1,p0});   % create a mixture of 2 Laplace for testing

                    
    pnoisy= mixture(weights2,{p1,p0});   

%     if nargin < 4
%         noise = 0;
%     end
%     if nargin < 3
%         scales = ones(1,length(weigths));
%     end
%     if nargin < 2
%         weights = [0.1, 0.9];
%     end
%     if nargin < 1
%         locations = [0.0, 5.0];
%     end
%     p = tolocScaleMixture(weights,locations,scales,'laplace');
%         
%     p1 = tolocScaleMixture(weights(1),locations(1),scales(1),'laplace');
%     p0 = tolocScaleMixture(weights(2),locations(2),scales(2),'laplace');
%                 
%     pnoisy= mixture([1-noise,noise],{p1,p0});   

end